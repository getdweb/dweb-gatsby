{"version":3,"file":"062164554971d853caf8e7050bab162a027fd89a-76b0743f26b10138c1cf.js","mappings":"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","sources":["webpack://get-dweb-dot-net/./node_modules/extend/index.js","webpack://get-dweb-dot-net/./src/components/Footer.js","webpack://get-dweb-dot-net/./node_modules/inline-style-parser/index.js","webpack://get-dweb-dot-net/./node_modules/is-buffer/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/style-to-object/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/unist-util-stringify-position/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile-message/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/bail/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/is-plain-obj/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/trough/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/unist-util-stringify-position/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile-message/index.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile/lib/minpath.browser.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile/lib/minproc.browser.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile/lib/minurl.shared.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile/lib/minurl.browser.js","webpack://get-dweb-dot-net/./node_modules/unified/node_modules/vfile/lib/index.js","webpack://get-dweb-dot-net/./node_modules/unified/lib/index.js","webpack://get-dweb-dot-net/./node_modules/mdast-util-to-string/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-chunked/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-combine-extensions/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-character/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-factory-space/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/initialize/content.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/initialize/document.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-subtokenize/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/content.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/initialize/flow.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/initialize/text.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-resolve-all/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/create-tokenizer.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/list.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://get-dweb-dot-net/./node_modules/micromark-factory-destination/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-factory-label/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-factory-title/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-factory-whitespace/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-normalize-identifier/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-html-tag-name/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://get-dweb-dot-net/./node_modules/decode-named-character-reference/index.dom.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-classify-character/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://get-dweb-dot-net/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/constructs.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/parse.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/preprocess.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-decode-string/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/unist-util-stringify-position/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/mdast-util-from-markdown/lib/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/node_modules/micromark/lib/postprocess.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/index.js","webpack://get-dweb-dot-net/./node_modules/remark-parse/lib/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-builder/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-util-is/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-util-visit/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-util-position/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-definitions/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/traverse.js","webpack://get-dweb-dot-net/./node_modules/micromark-util-sanitize-uri/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/wrap.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://get-dweb-dot-net/./node_modules/trim-lines/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/unist-util-generated/index.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://get-dweb-dot-net/./node_modules/remark-rehype/lib/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/schema.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/merge.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/normalize.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/info.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/types.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/defined-info.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/create.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/xlink.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/xml.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/xmlns.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/aria.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/html.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/svg.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/unist-util-is/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/unist-util-visit-parents/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/lib/rehype-filter.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/unist-util-visit/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/hast-util-whitespace/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/find.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/property-information/lib/hast-to-react.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/style-to-object/index.mjs","webpack://get-dweb-dot-net/./node_modules/react-markdown/lib/uri-transformer.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/lib/ast-to-react.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/comma-separated-tokens/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/node_modules/space-separated-tokens/index.js","webpack://get-dweb-dot-net/./node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport md5 from '../services/md5-service'\n\nexport default function Footer() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allFooterYaml {\n          nodes {\n            links {\n              direction\n              label\n              link_external\n              link_file\n              link_internal\n            }\n            header\n          }\n        }\n        allNetworkYaml(sort: { title: ASC }) {\n          nodes {\n            color\n            title\n            link\n          }\n        }\n        allSocialMediaYaml {\n          nodes {\n            icon_code\n            label\n            link\n          }\n        }\n      }\n    `\n  )\n\n  const social = data.allSocialMediaYaml.nodes\n  const options = data.allFooterYaml.nodes\n  const cities = data.allNetworkYaml.nodes\n\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col col-12 col-xs-12\">\n            <div className=\"d-xl-inline-block footer__left\">\n              <div\n                className=\"footer__text\"\n                dangerouslySetInnerHTML={{\n                  __html:\n                    'DWeb is a global network of builders and dreamers working to create a better, decentralized web.<br />\\r\\nThe web we want and deserve.',\n                }}\n              />\n\n              <div className=\"footer__social d-none d-md-inline-block\">\n                <div>\n                  {social.map((item) => (\n                    <a\n                      className=\"footer__social-item\"\n                      href={item.link}\n                      target=\"_blank\"\n                      key={md5(item.label)}\n                      dangerouslySetInnerHTML={{ __html: item.icon_code }}\n                      rel=\"noreferrer me\"\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"d-xl-inline-block footer__right\">\n              <div className=\"footer__network-nodes-header\">Network nodes:</div>\n              <div className=\"footer__network-nodes\">\n                {cities.map((city) => (\n                  <a\n                    className=\"footer__network-nodes-item\"\n                    href={city.link}\n                    target=\"_blank\"\n                    style={{ color: city.color }}\n                    key={md5(city.title)}\n                    rel=\"noreferrer\"\n                  >\n                    {city.title}\n                  </a>\n                ))}\n                <a\n                  className=\"footer__network-nodes-bottom-link\"\n                  href=\"../start-a-dweb-node/\"\n                  target=\"_blank\"\n                >\n                  Open chapter in your city\n                </a>\n              </div>\n\n              <div className=\"footer__social d-md-none\">\n                <div>\n                  {social.map((item) => (\n                    <a\n                      className=\"footer__social-item\"\n                      href={item.link}\n                      target=\"_blank\"\n                      key={md5(item.label)}\n                      dangerouslySetInnerHTML={{ __html: item.icon_code }}\n                      rel=\"noreferrer\"\n                    />\n                  ))}\n                </div>\n              </div>\n              <div className=\"footer__menus\">\n                {options.map((block) => (\n                  <div className=\"footer__menu\" key={md5(block.header)}>\n                    <div className=\"footer__menu-header\">{block.header}</div>\n                    {block.links.map((item) => {\n                      if (item.direction == 'internal')\n                        return (\n                          <Link\n                            className=\"footer__menu-link\"\n                            to={item.link_internal}\n                            key={md5(item.label)}\n                          >\n                            {item.label}\n                          </Link>\n                        )\n                      if (item.direction == 'file' && item.link_file !== null)\n                        return (\n                          <a\n                            className=\"footer__menu-link\"\n                            href={item.link_file}\n                            target=\"_blank\"\n                            key={md5(item.label)}\n                            rel=\"noreferrer\"\n                          >\n                            {item.label}\n                          </a>\n                        )\n                      if (item.direction == 'external')\n                        return (\n                          <a\n                            className=\"footer__menu-link\"\n                            href={item.link_external}\n                            target=\"_blank\"\n                            key={md5(item.label)}\n                            rel=\"noreferrer\"\n                          >\n                            {item.label}\n                          </a>\n                        )\n                    })}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"footer__bottom\">\n              <div className=\"footer__menuline\">\n                <a\n                  className=\"footer__menuline-item\"\n                  href=\"../privacy-policy\"\n                  target=\"_blank\"\n                  key={md5('Privacy policy')}\n                >\n                  Privacy policy\n                </a>\n              </div>\n              <div\n                className=\"footer__copyright\"\n                dangerouslySetInnerHTML={{\n                  // __html: `©${new Date().getFullYear()} View this website on <a href=\\\"ipns://getdweb.net\\\">IPFS</a> and <a href=\\\"hyper://4392a5062f7bf93c26543ca7a85a009b4e568117d107f31788676377e7b4ef45\\\">Hypercore</a>.`,\n                  __html: `©${new Date().getFullYear()}`,\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} MdastNode\n * @typedef {Extract<MdastNode, import('mdast').Parent>} MdastParent\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n *\n * @param {H} h\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} node\n * @param {MdastParent | null} parent\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @template {MdastNode} Node\n * @param {H} h\n * @param {Node} node\n * @returns {Node}\n */\nfunction returnNode(h, node) {\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {H} h\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').H} H\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @param {H} h\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @param {H} h\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @param {H} h\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @param {H} h\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n * @typedef {import('mdast').Parent} Parent\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {List} node\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @param {H} h\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').H} H\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {ThematicBreak} [node]\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","Footer","data","useStaticQuery","social","allSocialMediaYaml","nodes","allFooterYaml","cities","allNetworkYaml","className","dangerouslySetInnerHTML","__html","map","item","href","link","md5","label","icon_code","rel","city","style","color","title","block","header","links","direction","to","link_internal","link_file","link_external","Date","getFullYear","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","StyleToObject","iterator","output","hasIterator","len","stringifyPosition","point","index","VFileMessage","place","origin","parts","super","undefined","indexOf","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","messages","history","stored","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","extensions","combineExtensions","concat","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","props","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes"],"sourceRoot":""}